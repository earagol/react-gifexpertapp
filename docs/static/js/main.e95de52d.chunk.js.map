{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GiftExpertApp","categories","onClick","ReactDOM","render","document","getElementById"],"mappings":"2MAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OACI,sBAAMC,SAVW,SAAEC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKnB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAlBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCNnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,mGAEsFC,UAAWH,IAFjG,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCULO,EAVK,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAE/B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QC6BFO,EA/BE,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFP,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GACCH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAI1B,CAACpB,IAEGqB,EDR0BK,CAAc1B,GAAlCa,EATkB,EASvBN,KAAaa,EATU,EASVA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAkB,GAAK,OACb,cAAC,EAAD,eAESA,GADCA,EAAMhB,aEY7BiB,EAlCO,WAAM,MAGY1C,mBAAS,CAAC,cAHtB,mBAGjB2C,EAHiB,KAGL5C,EAHK,KAYxB,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,wBAAQ6C,QAbE,WAEd7C,EAAc,GAAD,mBAAM4C,GAAN,CAAiB,sBAW1B,qBAEA,6BAEQA,EAAWpB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEGA,SAAWA,GADLA,YCrBlC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e95de52d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    };\n\n    const handleSubmit = ( e ) => {\n         e.preventDefault();\n\n         if ( inputValue.trim().length > 2 ){\n             setCategories( cats => [ inputValue, ...cats ] );\n             setInputValue('');\n         }\n    };\n\n    return (\n        <form onSubmit= { handleSubmit }>\n            <input \n                type=\"text\"\n                value= { inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","\n\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=KxoqCOjXEJmc9yQQcsCTLsFJ6sYSsfo7&limit=10&q=${ encodeURI( category ) }`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nconst GifGridItem = ( { id, title, url } ) => {\n\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n// import { getGifts } from '../helpers/getGifts'\n\nconst GiftGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([]);\n\n    // useEffect( () => {\n    //     getGifts( category )\n    //         .then( setImages );\n    // }, [ category ])\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn'>{ category }</h3> \n\n            { loading && <p className='animate__animated animate__flash'>Loading</p> }\n\n            <div className=\"card-grid\">\n                    {\n                        images.map( image => (\n                            <GifGridItem \n                                key={ image.id }\n                                { ...image } \n                            />\n                        ))\n                    }\n            </div>\n        </>\n    )\n}\n\nexport default GiftGrid;\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(() => {\n\n        getGifs( category )\n            .then( imgs => {\n                    setState({\n                        data: imgs,\n                        loading: false\n                    });\n            })\n\n    }, [category])\n\n    return state;\n}","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory';\nimport GiftGrid from './components/GiftGrid';\n\nconst GiftExpertApp = () => {\n\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['One Punch']);\n\n    const handleAdd = () => {\n\n        setCategories( [...categories,'Hombre Araña'] );\n        // setCategories( 'Hombre Araña' );\n\n    }\n\n    return (\n        <>\n            <h2>GiftExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n\n            <button onClick={ handleAdd } >Agregar</button>\n\n            <ol>\n                {\n                    categories.map( category => \n                         <GiftGrid \n                            key={ category }\n                            category={ category }\n                         />\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GiftExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GiftExpertApp from './GiftExpertApp'\n\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}